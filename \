#include "util.h"
#include "DictionaryBST.h"
#include <set>
#include <string>

/* Create a new Dictionary that uses a BST back end */
DictionaryBST::DictionaryBST(){
  std::set<std::string> treeSet;
}

/* Insert a word into the dictionary. */
bool DictionaryBST::insert(std::string word)
{
  if (treeSet.find(word) == true)
    return false;
  else {
    treeSet.insert(word);
    return true;
  }
}

/* Return true if word is in the dictionary, and false otherwise */
bool DictionaryBST::find(std::string word) const
{
  if (treeSet.find(word) == true){
    return true;
  }
  else {
    return false;
  }
}

/* Destructor */
DictionaryBST::~DictionaryBST(){}
